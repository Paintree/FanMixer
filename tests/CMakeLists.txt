CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

SET(TEST_TARGET "FanControllerTests")
PROJECT(${TEST_TARGET}
  LANGUAGES C CXX ASM
)

# Set Project paths
SET(PROJECT_PATH "${PROJECT_SOURCE_DIR}/..")
SET(INCLUDE_PATH "${PROJECT_PATH}/include")
SET(SYSTEM_INCLUDE_PATH "${INCLUDE_PATH}/system")
SET(SRC_PATH "${PROJECT_PATH}/src")
SET(SYSTEM_SRC_PATH "${SRC_PATH}/system")
SET(SYSCALLS_SRC "${SYSTEM_SRC_PATH}/syscalls.c")

SET(ELF_FILE "${BUILD_DIR}/${TARGET}.elf")
SET(BIN_FILE "${BUILD_DIR}/${TARGET}.bin")
SET(HEX_FILE "${BUILD_DIR}/${TARGET}.hex")
SET(MAP_FILE "${BUILD_DIR}/${TARGET}.map")

ADD_SUBDIRECTORY("${PROJECT_SOURCE_DIR}/cpputest")

# Set this port depending on your MCUs processor
SET(FREERTOS_PORT "GCC/ARM_CM3")
SET(CHIP "STM32F103x6")
SET(CPU "-mcpu=cortex-m3")
SET(FLOAT_ABI "-mfloat-abi=soft")
SET(STLINK_CONF "target/stm32f1x_stlink.cfg")
SET(MCU_OPTS "${CPU} -mthumb ${FLOAT_ABI}")

# Heap type used in FreeRTOS
SET(HEAP_TYPE "4")

# STM32HAL driver configuration 
SET(STM32_DIR "${PROJECT_PATH}/STM32CubeF1")
SET(CMSIS_DIR "${STM32_DIR}/Drivers/CMSIS")
SET(HAL_DRIVER_DIR "${STM32_DIR}/Drivers/STM32F1xx_HAL_Driver")
SET(STM32FX_DIR "${CMSIS_DIR}/Device/ST/STM32F1xx")
SET(STM32_INCLUDE "${HAL_DRIVER_DIR}/Inc")
SET(STM32_SRC "${HAL_DRIVER_DIR}/Src")
SET(FREERTOS_DIR "${STM32_DIR}/Middlewares/Third_Party/FreeRTOS")
SET(FREERTOS_SRC "${FREERTOS_DIR}/Source")
SET(FREERTOS_INCLUDE "${FREERTOS_SRC}/include")
SET(HAL_MCU_NAME "stm32f1xx")
SET(STARTUP_FILE "${STM32FX_DIR}/Source/Templates/gcc/startup_stm32f103x6.s")

# Preprocessor definitions to enable HAL driver
ADD_DEFINITIONS(-D${CHIP})
ADD_DEFINITIONS(-DUSE_HAL_DRIVER)

# Include paths
INCLUDE_DIRECTORIES("${HAL_DRIVER_DIR}/Inc")
INCLUDE_DIRECTORIES("${CMSIS_DIR}/Include")
INCLUDE_DIRECTORIES("${STM32FX_DIR}/Include")
INCLUDE_DIRECTORIES("${INCLUDE_PATH}")
INCLUDE_DIRECTORIES("${SYSTEM_INCLUDE_PATH}")
INCLUDE_DIRECTORIES("${STM32_INCLUDE}")
INCLUDE_DIRECTORIES("${FREERTOS_INCLUDE}")
INCLUDE_DIRECTORIES("${FREERTOS_SRC}/portable/${FREERTOS_PORT}")

# Enable HAL modules
ADD_DEFINITIONS(-DHAL_MODULE_ENABLED)
ADD_DEFINITIONS(-DHAL_CORTEX_MODULE_ENABLED)
ADD_DEFINITIONS(-DHAL_DMA_MODULE_ENABLED)
ADD_DEFINITIONS(-DHAL_GPIO_MODULE_ENABLED)
ADD_DEFINITIONS(-DHAL_RCC_MODULE_ENABLED)
ADD_DEFINITIONS(-DHAL_FLASH_MODULE_ENABLED)
ADD_DEFINITIONS(-DHAL_IWDG_MODULE_ENABLED)
ADD_DEFINITIONS(-DHAL_PWR_MODULE_ENABLED)
ADD_DEFINITIONS(-DHAL_TIM_MODULE_ENABLED)

SET(PROJ_SRC_DIR "${PROJECT_PATH}/src")
SET(MOCK_SRC_DIR "${PROJECT_SOURCE_DIR}/mock")
SET(TEST_SRC_DIR "${PROJECT_SOURCE_DIR}/src")

FILE(GLOB_RECURSE MOCK_SRCS "${MOCK_SRC_DIR}/*.c" "${MOCK_SRC_DIR}/*.cpp")
# FILE(GLOB PROJECT_SRCS  )
FILE(GLOB_RECURSE TEST_SRCS "${TEST_SRC_DIR}/*.c" "${TEST_SRC_DIR}/*.cpp")

ADD_EXECUTABLE(${TEST_TARGET} "${MOCK_SRCS}" "${TEST_SRCS}" "${SYSCALLS_SRC}")
# ADD_EXECUTABLE(${TEST_TARGET} "${PROJECT_SRCS}" "${MOCK_SRCS}" "${TEST_SRCS}")
TARGET_LINK_LIBRARIES(${TEST_TARGET}
    CppUTest::CppUTest
    CppUTest::CppUTestExt
    )